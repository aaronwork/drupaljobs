<?php
/**
 * @file
 * Code for the drop_jobs_organization feature.
 */

include_once 'drop_jobs_organization.features.inc';

/**
 * Constants for unique rids generated by Role Export.
 */
define('DROP_JOBS_ROLE_ORGANIZATION', '196496503');
define('DROP_JOBS_ROLE_ORGANIZATION_ADMIN', '172967625');

/**
 * Implements hook_permission().
 */
function drop_jobs_organization_permission() {
  return array(
    'administer drop_jobs organizations' => array(
      'title' => t('Administer organizations'),
    ),
  );
}

/**
 * Implements hook_help().
 */
function drop_jobs_organization_help($path, $arg) {
  switch ($path) {
    case 'admin/drop-jobs/organizations':
      return t('Here you can view, edit and delete all organizations.');
    case 'dashboard/organization':
      return t('This is your organization dashboard. Here you can manage and view everything related to your account.');
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add a "create organization" link to the "Organization" field.
 */
function drop_jobs_organization_form_user_profile_form_alter(&$form, &$form_state) {
  // @TODO figure out a better way to deal with this.
  if (isset($form['profile_recruiter']['field_recruiter_organization'])) {
    $organization =& $form['profile_recruiter']['field_recruiter_organization'];
    $suffix = isset($organization['#suffix']) ? $organization['#suffix'] : '';
    $suffix .= l(t('New organization'), 'node/add/organization', array(
      'attributes' => array(
        'class' => array('action-add', 'new-organization-link'),
        'target' => '_blank',
      ),
    ));
    $organization['#suffix'] = $suffix;
  }
}

/**
 * Implements hook_init().
 */
function drop_jobs_organization_init() {
  // Add admin section styles.
  if (drop_jobs_core_is_admin_page()) {
    drupal_add_css(drupal_get_path('module', 'drop_jobs_organization') . '/css/drop_jobs_organization_admin.css');
  }
}

/**
 * Implements hook_migrate_api().
 */
function drop_jobs_organization_migrate_api() {
  return array(
    'api' => 2,
    'migrations' => array(
      'DropJobsTermIndustries' => array('class_name' => 'DropJobsTermIndustries'),
      'DropJobsTermOrganizationSize' => array('class_name' => 'DropJobsTermOrganizationSize'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function drop_jobs_organization_menu() {
  $items = array();

  // Organization dashboard.
  $items['dashboard/organization'] = array(
    'title' => 'Organization dashboard',
    'description' => 'Drop Jobs Organization Dashboard.',
    'page callback' => 'drop_jobs_organization_dashboard',
//    'access callback' => TRUE,
    'access callback' => 'drop_jobs_organization_dashboard_access',
    'file' => 'drop_jobs_organization.pages.inc',
    'menu_name' => 'user-menu',
    'weight' => -50,
  );

  $items['dashboard/organization/home'] = array(
    'title' => 'Organization Dashboard Home',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -50,
  );

  // "My Organization" dashboard page.
  $items['dashboard/organization/page'] = array(
    'title' => 'My organization',
    'page callback' => 'drop_jobs_organization_profile',
    'access callback' => 'drop_jobs_organization_dashboard_access',
    'menu_name' => 'menu-drop-jobs-dashboard',
    'file' => 'drop_jobs_organization.pages.inc',
    'weight' => -50,
  );

  $items['dashboard/organization/page/view'] = array(
    'title' => 'View',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -50,
  );

  $items['dashboard/organization/page/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drop_jobs_organization_profile_edit',
    'access callback' => 'drop_jobs_organization_dashboard_access',
    'type' => MENU_LOCAL_TASK,
    'file' => 'drop_jobs_organization.pages.inc',
  );

  // Organization dashboard settings form.
  $items['dashboard/organization/preferences'] = array(
    'title' => 'Preferences',
    'description' => 'Drop Jobs organization preferences',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('drop_jobs_organization_preferences'),
    'access callback' => 'drop_jobs_organization_dashboard_access',
    'menu_name' => 'menu-drop-jobs-dashboard',
    'file' => 'drop_jobs_organization.pages.inc',
    'weight' => 49,
  );

  $items['dashboard/organization/preferences/global'] = array(
    'title' => 'Global Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -50,
  );

  return $items;
}

/**
 * Implements hook_custom_theme().
 */
function drop_jobs_organization_custom_theme() {
  if (arg(0) === 'node' && is_numeric(arg(1)) && arg(2) === 'edit') {
    if (drop_jobs_user_has_role(DROP_JOBS_ROLE_ORGANIZATION)) {
      if ($node = node_load(arg(1))) {
        if ($node->type === 'organization') {
          return variable_get('admin_theme', 'fubik');
        }
      }
    }
  }
}

/**
 * Access callback.
 *
 * Checks whether the user is an organization and can access the dashboard.
 *
 * @see drop_jobs_organization_menu()
 */
function drop_jobs_organization_dashboard_access() {
  return drop_jobs_user_has_role(DROP_JOBS_ROLE_ORGANIZATION) && user_access('access drop_jobs user dashboard');
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function drop_jobs_organization_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if ($root_path === 'node/%/edit') {
    if (isset($router_item['map'][1]) && is_object($router_item['map'][1])) {
      $account = user_uid_optional_load();
      if ($router_item['map'][1]->type === 'organization' && $router_item['map'][1]->uid == $account->uid) {
        if (isset($data['tabs'][0]['output'][0]['#link'])) {
          $path = 'dashboard/organization/page';
          $data['tabs'][0]['output'][0]['#link']['path'] = $path;
          $data['tabs'][0]['output'][0]['#link']['href'] = $path;
          $data['tabs'][0]['output'][0]['#link']['tab_root_href'] = $path;
          $data['tabs'][0]['output'][0]['#link']['tab_parent_href'] = $path;
          $data['tabs'][0]['output'][0]['#link']['page_callback'] = 'drop_jobs_organization_page';
          $data['tabs'][0]['output'][0]['#link']['include_file'] = drupal_get_path('module', 'drop_jobs_organization') . '/drop_jobs_organization.pages.inc';
        }
      }
    }
  }
}

/**
 * Returns an organization node for the given user.
 *
 * @param integer
 *   The user id
 * @return stdClass
 *   The organization node object.
 */
function drop_jobs_organization_find_by_user($uid) {
  $nid =
    db_select('node', 'n')
    ->fields('n', array('nid'))
    ->condition('n.uid', $uid, '=')
    ->condition('n.type', 'organization', '=')
    ->range(0, 1)
    ->execute()
    ->fetchField();

  if ($node = node_load($nid)) {
    return $node;
  }

  return FALSE;
}

/**
 * Implements hook_menu_breadcrumb_alter().
 *
 * Fix breadcrumbs for dashboard paths.
 */
function drop_jobs_organization_menu_breadcrumb_alter(&$active_trail, $item) {
  $dashboard_paths = array(
    'dashboard/organization/page',
    'dashboard/organization/preferences',
  );

  drupal_alter('drop_jobs_organization_dashboard_paths', $dashboard_paths);

  $dashboard_trail = array(
    array(
      'title' => t('Home'),
      'href' => '<front>',
      'localized_options' => array(),
    ),
    array(
      'title' => t('Organization dashboard'),
      'href' => 'dashboard/organization',
      'localized_options' => array(),
    ),
  );

  if (in_array($item['path'], $dashboard_paths)) {
    $active_trail = $dashboard_trail;
  }
  else if ($item['path'] === 'node/%/edit') {
    if (isset($item['map'][1]) && is_object($item['map'][1])) {
      $account = user_uid_optional_load();
      if ($item['map'][1]->type === 'organization' && $item['map'][1]->uid == $account->uid) {
        $dashboard_trail[] = array(
          'title' => t('My organization'),
          'href' => 'dashboard/organization/page',
          'localized_options' => array(),
        );
        $active_trail = $dashboard_trail;
      }
    }
  }
}
